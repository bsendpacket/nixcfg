diff --git a/VERSION b/VERSION
index 365abe5..982c49e 100644
--- a/VERSION
+++ b/VERSION
@@ -1,4 +1,4 @@
-innoextract 1.10-dev
+innoextract 1.10-dev-patched
 
 Known working Inno Setup versions:
 Inno Setup 1.2.10 to 6.2.2
diff --git a/src/cli/extract.cpp b/src/cli/extract.cpp
index ae72f21..5c13385 100644
--- a/src/cli/extract.cpp
+++ b/src/cli/extract.cpp
@@ -1135,6 +1135,31 @@ void process_file(const fs::path & installer, const extract_options & o) {
 		}
 	}
 	
+	// Extract embedded CompiledCode.bin
+	if (o.extract && !info.header.compiled_code.empty()) {
+		fs::path dir = o.output_dir / std::string("embedded");
+		try {
+			fs::create_directory(dir);
+		} catch(...) {
+			throw std::runtime_error("Could not create directory \"" + dir.string() + '"');
+		}
+
+		fs::path compiled_code_path = o.output_dir / "embedded" / "CompiledCode.bin";
+		std::ofstream compiled_code_file(compiled_code_path.string(), std::ios::out);
+
+		if (!compiled_code_file) {
+		    throw std::runtime_error("Failed to open file for writing: " + compiled_code_path.string());
+		}
+
+		// Write the contents of compiled_code to the file
+		const std::string& compiled_code = info.header.compiled_code;
+		compiled_code_file.write(compiled_code.data(), static_cast<std::streamsize>(compiled_code.size()));
+		compiled_code_file.close();
+
+		std::cout << " - \"" << color::white << "embedded/CompiledCode.bin" << color::reset << '"';
+		std::cout << " [" << color::cyan << "embedded" << color::reset << "]" << std::endl;
+	}
+
 	progress extract_progress(total_size);
 	
 	typedef boost::ptr_map<const processed_file *, file_output> multi_part_outputs;
